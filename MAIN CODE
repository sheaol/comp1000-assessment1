int pmX, pmY; // PacMan position
int pacmanSize = 40; // PacMan size
int pacmanSpeed = 2; // PacMan speed
boolean movingRight = true; // Initial movement direction
int mouthAngle = 45; // Initial mouth angle
int prevMouthFrame = 0; // Frame tracker for mouth animation

void setup() {
  size(800, 200);
  background(0);
  pmX = width / 2;
  pmY = height / 2;
}

void draw() {
  background(0);
  drawBars();
  movePacMan();
  drawPacMan();
}

void drawBars() {
  stroke(0, 0, 255);
  strokeWeight(10); //10px in width
  line(0, 20, width, 20); // Top blue bar
  line(0, height - 20, width, height - 20); // Bottom blue bar
}

void movePacMan() {
  if (movingRight) {
    pmX += pacmanSpeed;
    if (pmX >= width) {
      pmX = 0;
    }
  } else {
    pmX -= pacmanSpeed;
    if (pmX <= 0 - pacmanSize) {
      pmX = width - pacmanSize;
    }
  }
}

void drawPacMan() {
  noStroke(); // removes the stroke that the drawBar function would give it 
  fill(255, 255, 0);
  if (movingRight) {
    arc(pmX, pmY, pacmanSize, pacmanSize, radians(mouthAngle), radians(360 - mouthAngle), PIE);
  } else {
    arc(pmX, pmY, pacmanSize, pacmanSize, radians(180 + mouthAngle), radians(180 - mouthAngle), PIE);
  }
  
  // Update mouth angle for animation
  if (frameCount - prevMouthFrame > 60) { // Change mouth every 60 frames (1 second at 60 fps)
    if (mouthAngle == 45) {
      mouthAngle = 0;
    } else {
      mouthAngle = 45;
    }
    prevMouthFrame = frameCount;
  }
}

void keyPressed() {
  if (key == ' ') {
    movingRight = !movingRight; // Swap direction
  }
}

//not sure how to flip the arc movement without it disappearing off the screen
